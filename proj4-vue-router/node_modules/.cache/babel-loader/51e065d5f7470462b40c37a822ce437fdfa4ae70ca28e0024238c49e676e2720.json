{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.job ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h1\", null, _toDisplayString($data.job.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"The job id is \" + _toDisplayString($props.id), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.job.details), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","$data","job","_hoisted_1","_createCommentVNode","_createElementVNode","_toDisplayString","title","$props","id","details"],"sources":["/Users/zachhackett/Documents/Projects/learning-vue-firebase/proj4-vue-router/src/views/jobs/JobDetailsView.vue"],"sourcesContent":["<template>\n  <div v-if=\"job\"></div>\n  <h1>{{ job.title }}</h1>\n  <p>The job id is {{ id }}</p>\n  <p>{{  job.details }}</p>\n</template>\n\n<script>\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      job: null\n    }\n  },\n  mounted() {\n    fetch('http://localhost:3000/jobs/' + this.id)\n      .then(res => res.json())\n      .then(data => this.job = data)\n      .catch(err => console.log(err.message))\n  }\n  // data() {\n  //   return {\n  //     id: this.$route.params.id\n  //   }\n  // }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;EAAAA,GAAA;AAAA;;uBAAAC,mBAAA,CAAAC,SAAA,SACaC,KAAA,CAAAC,GAAG,I,cAAdH,mBAAA,CAAsB,OADxBI,UAAA,KAAAC,mBAAA,gBAEEC,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBL,KAAA,CAAAC,GAAG,CAACK,KAAK,kBAChBF,mBAAA,CAA6B,WAA1B,gBAAc,GAAAC,gBAAA,CAAGE,MAAA,CAAAC,EAAE,kBACtBJ,mBAAA,CAAyB,WAAAC,gBAAA,CAAlBL,KAAA,CAAAC,GAAG,CAACQ,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
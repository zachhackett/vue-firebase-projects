{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.showBlock ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"block\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.stopTimer && $options.stopTimer(...args))\n  }, \" click me \")) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["$data","showBlock","_createElementBlock","key","class","onClick","_cache","args","$options","stopTimer","_createCommentVNode"],"sources":["/Users/zachhackett/Documents/Projects/learning-vue-firebase/proj2-reaction-timer/reaction-timer/src/components/Block.vue"],"sourcesContent":["<template>\n  <div class=\"block\" v-if=\"showBlock\" @click=\"stopTimer\">\n    click me\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['delay'],\n  data() {\n    return {\n      showBlock: false,\n      timer: null,\n      reactionTime: 0\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.showBlock = true\n      this.startTimer()\n    }, this.delay)\n  },\n  methods: {\n    startTimer() {\n      this.timer = setInterval(() => {\n        this.reactionTime += 10\n      }, 10)\n    },\n    stopTimer() {\n      clearInterval(this.timer)\n    }\n  }\n}\n</script>\n\n<style>\n  .block {\n    width: 400px;\n    border-radius: 20px;\n    background: #0faf87;\n    color: white;\n    text-align: center;\n    padding: 100px 0;\n    margin: 40px auto;\n  }\n</style>"],"mappings":";;SAC2BA,KAAA,CAAAC,SAAS,I,cAAlCC,mBAAA,CAEM;IAHRC,GAAA;IACOC,KAAK,EAAC,OAAO;IAAmBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAEvD,KAHFG,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PostList = _resolveComponent(\"PostList\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Home\", -1 /* HOISTED */)), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.posts.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_PostList, {\n    posts: $setup.posts\n  }, null, 8 /* PROPS */, [\"posts\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Loading...\"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$setup","error","_hoisted_2","_toDisplayString","_createCommentVNode","posts","length","_hoisted_3","_createVNode","_component_PostList","_hoisted_4"],"sources":["/Users/zachhackett/Documents/Projects/learning-vue-firebase/proj6-dojo-blog/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>Home</h1>\n    <div v-if=\"error\">{{ error }}</div>\n    <div v-if=\"posts.length\">\n      <PostList :posts=\"posts\" />\n    </div>\n    <div v-else>Loading...</div>\n  </div>\n</template>\n\n<script>\nimport PostList from '@/components/PostList.vue';\nimport { ref } from 'vue';\n\n// @ is an alias to /src\n\nexport default {\n  name: 'HomeView',\n  components: { PostList },\n  setup() {\n    const posts = ref([])\n    const error = ref(null)\n\n    const load = async () => {\n      try {\n        let data = await fetch('http://localhost:3000/posts')\n        if (!data.ok) {\n          throw Error('no data available')\n        }\n\n        posts.value = await data.json()\n      }\n      catch (err) {\n        error.value = err.message\n        console.log(error.value)\n      }\n    } \n\n    load()\n\n    return { posts, error }\n  }\n}\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EADnBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;uBACEC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJC,mBAAA,CAAa,YAAT,MAAI,sBACGC,MAAA,CAAAC,KAAK,I,cAAhBJ,mBAAA,CAAmC,OAHvCK,UAAA,EAAAC,gBAAA,CAGyBH,MAAA,CAAAC,KAAK,oBAH9BG,mBAAA,gBAIeJ,MAAA,CAAAK,KAAK,CAACC,MAAM,I,cAAvBT,mBAAA,CAEM,OANVU,UAAA,GAKMC,YAAA,CAA2BC,mBAAA;IAAhBJ,KAAK,EAAEL,MAAA,CAAAK;EAAK,mC,oBAEzBR,mBAAA,CAA4B,OAPhCa,UAAA,EAOgB,YAAU,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
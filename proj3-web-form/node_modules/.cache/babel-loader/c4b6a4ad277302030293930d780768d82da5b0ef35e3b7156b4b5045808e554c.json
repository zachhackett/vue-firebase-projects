{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  class: \"terms\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"form\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Email:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"Password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"Role:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.role = $event)\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"option\", {\n    value: \"developer\"\n  }, \"Web Developer\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"designer\"\n  }, \"Web Designer\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.role]]), _cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"Skills:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.tempSkill = $event),\n    onKeyup: _cache[4] || (_cache[4] = (...args) => _ctx.addSkill && _ctx.addSkill(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.tempSkill]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.skills, skill => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: skill,\n      class: \"pill\"\n    }, [_createElementVNode(\"span\", {\n      onClick: $event => _ctx.deleteSkill(skill)\n    }, _toDisplayString(skill), 9 /* TEXT, PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.terms = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, _ctx.terms]]), _cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Accept terms and conditions.\", -1 /* HOISTED */))])]), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString(_ctx.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Password: \" + _toDisplayString(_ctx.password), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Role: \" + _toDisplayString(_ctx.role), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Terms accepted: \" + _toDisplayString(_ctx.terms), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","type","required","_cache","$event","_ctx","email","password","role","value","tempSkill","onKeyup","args","addSkill","_renderList","skills","skill","key","onClick","deleteSkill","_hoisted_1","_hoisted_2","terms","_toDisplayString"],"sources":["/Users/zachhackett/Documents/Projects/learning-vue-firebase/proj3-web-form/src/components/SignupForm.vue"],"sourcesContent":["<template>\n  <form>\n    <label>Email:</label>\n    <input type=\"email\" required v-model=\"email\">\n    <label>Password:</label>\n    <input type=\"password\" required v-model=\"password\">\n\n    <label>Role:</label>\n    <select v-model=\"role\">\n      <option value=\"developer\">Web Developer</option>\n      <option value=\"designer\">Web Designer</option>\n    </select>\n\n    <label>Skills:</label>\n    <input type=\"text\" v-model=\"tempSkill\" @keyup=\"addSkill\">\n    <div v-for=\"skill in skills\" :key=\"skill\" class=\"pill\" >\n      <span @click=\"deleteSkill(skill)\">{{ skill }}</span>\n    </div>\n\n    <div class=\"terms\">\n      <input type=\"checkbox\" required v-model=\"terms\">\n      <label>Accept terms and conditions.</label>\n    </div>\n  </form>\n\n  <p>Email: {{ email }}</p>\n  <p>Password: {{ password }}</p>\n  <p>Role: {{ role }}</p>\n  <p>Terms accepted: {{ terms }}</p>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      role: '',\n      terms: false,\n      tempSkill: '',\n      skills: []\n    }\n  },\n  methods: {\n    addSkill(e) {\n      if(e.key === ',' && this.tempSkill) {\n        if(!this.skills.includes(this.tempSkill)) {\n          this.skills.push(this.tempSkill)\n        }\n        this.tempSkill = ''\n      }\n    },\n    deleteSkill(e) {\n      index = this.skills.indexOf(this.)\n      this.skills.splic(index, 1)\n    }\n  }\n}\n</script>\n\n<style>\n  form {\n    max-width: 420px;\n    margin: 30px auto;\n    background: white;\n    text-align: left;\n    padding: 40px;\n    border-radius: 10px;\n  }\n  label {\n    color: #aaa;\n    display: inline-block;\n    margin: 25px 0 15px;\n    font-size: 0.6em;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    font-weight: bold;\n  }\n  input, select {\n    display: block;\n    padding: 10px 6px;\n    width: 100%;\n    box-sizing: border-box;\n    border: none;\n    border-bottom: 1px solid #ddd;\n    color: #555;\n  }\n  input[type=\"checkbox\"] {\n    display: inline-block;\n    width: 16px;\n    margin: 0 10px 0 0;\n    position: relative;\n    top: 2px;\n  }\n  .pill {\n    display: inline-block;\n    margin: 20px 10px 0 0;\n    padding: 6px 12px;\n    background: #eee;\n    border-radius: 20px;\n    font-size: 12px;\n    letter-spacing: 1px;\n    font-weight: bold;\n    color: #777;\n    cursor: pointer;\n  }\n</style>"],"mappings":";mBAAA;;EAmBSA,KAAK,EAAC;AAAO;;uBAnBtBC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAsBO,e,0BArBLA,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAA6C;IAAtCC,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;IAHhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAG0CC,IAAA,CAAAC,KAAK,GAAAF,MAAA;iDAALC,IAAA,CAAAC,KAAK,E,6BAC3CN,mBAAA,CAAwB,eAAjB,WAAS,sB,gBAChBA,mBAAA,CAAmD;IAA5CC,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;IALnC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK6CC,IAAA,CAAAE,QAAQ,GAAAH,MAAA;iDAARC,IAAA,CAAAE,QAAQ,E,+BAEjDP,mBAAA,CAAoB,eAAb,OAAK,sB,gBACZA,mBAAA,CAGS;IAXb,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQqBC,IAAA,CAAAG,IAAI,GAAAJ,MAAA;gCACnBJ,mBAAA,CAAgD;IAAxCS,KAAK,EAAC;EAAW,GAAC,eAAa,qBACvCT,mBAAA,CAA8C;IAAtCS,KAAK,EAAC;EAAU,GAAC,cAAY,oB,2CAFtBJ,IAAA,CAAAG,IAAI,E,+BAKrBR,mBAAA,CAAsB,eAAf,SAAO,sB,gBACdA,mBAAA,CAAyD;IAAlDC,IAAI,EAAC,MAAM;IAdtB,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcgCC,IAAA,CAAAK,SAAS,GAAAN,MAAA;IAAGO,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEP,IAAA,CAAAQ,QAAA,IAAAR,IAAA,CAAAQ,QAAA,IAAAD,IAAA,CAAQ;iEAA3BP,IAAA,CAAAK,SAAS,E,sBACrCZ,mBAAA,CAEMC,SAAA,QAjBVe,WAAA,CAeyBT,IAAA,CAAAU,MAAM,EAAfC,KAAK;yBAAjBlB,mBAAA,CAEM;MAFwBmB,GAAG,EAAED,KAAK;MAAEnB,KAAK,EAAC;QAC9CG,mBAAA,CAAoD;MAA7CkB,OAAK,EAAAd,MAAA,IAAEC,IAAA,CAAAc,WAAW,CAACH,KAAK;wBAAMA,KAAK,wBAhBhDI,UAAA,E;kCAmBIpB,mBAAA,CAGM,OAHNqB,UAGM,G,gBAFJrB,mBAAA,CAAgD;IAAzCC,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;IApBrC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoB+CC,IAAA,CAAAiB,KAAK,GAAAlB,MAAA;qDAALC,IAAA,CAAAiB,KAAK,E,6BAC9CtB,mBAAA,CAA2C,eAApC,8BAA4B,qB,KAIvCA,mBAAA,CAAyB,WAAtB,SAAO,GAAAuB,gBAAA,CAAGlB,IAAA,CAAAC,KAAK,kBAClBN,mBAAA,CAA+B,WAA5B,YAAU,GAAAuB,gBAAA,CAAGlB,IAAA,CAAAE,QAAQ,kBACxBP,mBAAA,CAAuB,WAApB,QAAM,GAAAuB,gBAAA,CAAGlB,IAAA,CAAAG,IAAI,kBAChBR,mBAAA,CAAkC,WAA/B,kBAAgB,GAAAuB,gBAAA,CAAGlB,IAAA,CAAAiB,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}